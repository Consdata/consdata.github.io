I"<p>JavaScript i cały ekosystem z nim związany jest bardzo rozbudowany i wydaje się, że wcale nie zamierza przestać się rozrastać. Można czasem usłyszeć, że tydzień, w którym nie powstał nowy framework do JSa jest tygodniem straconym. Masa bibliotek w różnych wersjach, kolejne języki rozbudowujące możliwości JavaScriptu zmieniające to, jak go postrzegamy np.: TypeScript czy CoffeeScript, do tego jeszcze Node.js oraz różne silniki w przeglądarkach. W rezultacie mamy całkiem sporą listę i coraz więcej pracy związanej z zarządzaniem tym wszystkim.</p>

<p>Dlatego tym bardziej warto zainteresować się rozwiązaniami, które mają na celu ułatwić nam życie.
Jednym z nich jest nvm, czyli Node Version Manager, który ma nam pomóc zarządzać wersjami Node.js.
Cel jest prosty - umożliwić nam szybkie i łatwe przeskakiwanie między wersjami Node niewymagające uprawnień administratora.</p>

<h2 id="zalety">Zalety</h2>
<p>+ instalacja nie wymaga uprawnień roota,<br />
+ dostęp do wielu wersji Node,<br />
+ szybkie i wygodne zmiany wersji noda,<br />
+ możliwość wykorzystania różnych wersji Node dla różnych projektów.</p>

<h2 id="wady">Wady</h2>

<p>- nvm manipuluje .bashrc,<br />
- lag na starcie bash.</p>

<h2 id="podstawowe-polecenia-nvm">Podstawowe polecenia nvm</h2>

<ul>
  <li>
    <p>wylistowanie wszystkich dostępnych wersji</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm ls-remote
</code></pre></div>    </div>

    <p>Zwróci nam wynik w postaci listy dostępnych wersji z zaznaczoną obecnie używaną.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>v0.1.14
...
v10.15.0
-&gt;  v10.15.1
v10.15.2
...
v12.2.0
</code></pre></div>    </div>
  </li>
  <li>
    <p>instalacja najnowszej wersji Node</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm install Node
</code></pre></div>    </div>

    <p>w rezultacie otrzymamy informacje jak poniżej</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nvm install node
Downloading and installing node v12.2.0...
Downloading https://nodejs.org/dist/v12.2.0/node-v12.2.0-linux-x64.tar.xz...
######################################################################### 100,0%
Computing checksum with sha256sum
Checksums matched!
Now using node v12.2.0 (npm v6.9.0)
</code></pre></div>    </div>
  </li>
  <li>
    <p>instalacja najnowszej wersji oznaczonej jako Long-term support</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm install --lts
</code></pre></div>    </div>

    <p>poniżej rezultat</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> $ nvm install --lts
 Installing latest LTS version.
 Downloading and installing node v10.15.3...
 Downloading https://nodejs.org/dist/v10.15.3/node-v10.15.3-linux-x64.tar.xz...
 ######################################################################### 100,0%
 Computing checksum with sha256sum
 Checksums matched!
 Now using node v10.15.3 (npm v6.4.1)
</code></pre></div>    </div>
  </li>
  <li>
    <p>instalacja konkretnej wersji Node (po instalacji aktualnie używaną wersją jest ta ostatnio zainstalowana)</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm install {VERSION}
</code></pre></div>    </div>

    <p>tu rezultat wygląda bardzo podobnie</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nvm install 8.6.0
Downloading and installing node v8.6.0...
Downloading https://nodejs.org/dist/v8.6.0/node-v8.6.0-linux-x64.tar.xz...
######################################################################### 100,0%
Computing checksum with sha256sum
Checksums matched!
Now using node v8.6.0 (npm v5.3.0)
</code></pre></div>    </div>
  </li>
  <li>
    <p>przestawienie domyślnej wersji Node</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nvm alias default 10.15.1
default -&gt; 10.15.1 (-&gt; v10.15.1)
</code></pre></div>    </div>
  </li>
  <li>
    <p>wylistowanie wszystkich zainstalowanych wersji</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm ls
</code></pre></div>    </div>

    <p>zwraca nam listę aktualnie zainstalowanych wersji</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>v10.15.0
-&gt;  v10.15.1
v10.15.2
</code></pre></div>    </div>
  </li>
  <li>
    <p>użycie konkretnej wersji</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm use Node {VERSION}
</code></pre></div>    </div>

    <p>nvm potwierdzi nam zmianę wersji</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nvm use 12.2.0
Now using node v12.2.0 (npm v6.9.0)
</code></pre></div>    </div>
  </li>
  <li>
    <p>uruchomienie aplikacji w wybranej wersji Node</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm run {VERSION} index.js
</code></pre></div>    </div>

    <p>tu również nie będziemy mieć wątpliwości z jaką wersją uruchomiliśmy aplikację</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nvm run 8.6.0 index.js 
Running node v8.6.0 (npm v5.3.0)
</code></pre></div>    </div>
  </li>
  <li>
    <p>usunięcie wybranej wersji Node</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvm uninstall {VERSION}
</code></pre></div>    </div>

    <p>potwierdzenie usunięcia</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ nvm uninstall 8.6.0
Uninstalled node v8.6.0
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="ponadto-nvmrc">Ponadto .nvmrc.</h3>
<p>Warto pamiętać, że w ramach projektu możemy łatwo ustalić jak wersja Node ma być wykorzystywana, a nvm zajmie się resztą.
Do projektu wystarczy dodać plik .nvmrc.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  9.0.1
</code></pre></div></div>

<p>i wykonać polecenie</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  nvm use
</code></pre></div></div>

<h3 id="uwaga-na-koniec">Uwaga na koniec</h3>
<p>Nvm zwiększa objętość pliku .bashrc co spowalnia działanie terminala, trzeba się zastanowić czy na środowisku produkcyjnym jest to koszt, który chcemy ponosić.</p>

<h3 id="link-do-projektu">Link do projektu</h3>
<p><a href="https://github.com/nvm-sh/nvm/blob/master/README.md">https://github.com/nvm-sh/nvm/blob/master/README.md</a></p>
:ET