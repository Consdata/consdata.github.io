I"‰-<p>Wydanie stabilnej wersji Angular 2 to idealny moment, Å¼eby zaczÄ…Ä‡ swojÄ… przygodÄ™ z tym frameworkiem. Nie ma lepszego sposobu na poznanie nowej technologii niÅ¼ skok na gÅ‚Ä™bokÄ… wodÄ™ i rozpoczÄ™cie zabawy z kodem ğŸ˜‰</p>

<p>CzÄ™stym problemem przy pierwszym zetkniÄ™ciu z nowÄ… technologiÄ… jest wysoki prÃ³g wejÅ›cia zwiÄ…zany z przygotowaniem Å›rodowiska, projektu, czy teÅ¼ samym uruchomieniem i testowaniem. Mimo Å¼e samodzielne stworzenie projektu, przygotowanie caÅ‚ej konfiguracji i uruchomienie pierwszego buildu to Å›wietna przygoda, tym razem skorzystamy z narzÄ™dzia Angular CLI i uruchomimy caÅ‚oÅ›Ä‡ w kilka minut.</p>

<p>W ramach artykuÅ‚u dowiesz siÄ™:</p>
<ul>
  <li>jak stworzyÄ‡ od zera projekt aplikacji webowej opartej o Angular 2,</li>
  <li>jak budowaÄ‡ i pracowaÄ‡ z projektem,</li>
  <li>jak szybko tworzyÄ‡ skÅ‚adowe elementy projektu nie powtarzajÄ…c tworzenia boilerplate.</li>
</ul>

<p>Przed przeczytaniem artykuÅ‚u warto mieÄ‡ zgrubne pojÄ™cie o konceptach frameworka: <a href="https://angular.io/docs/ts/latest/guide/architecture.html">https://angular.io/docs/ts/latest/guide/architecture.html</a></p>

<h2 id="utworzenie-projektu">Utworzenie projektu</h2>
<p>Do dziaÅ‚ania angular-cli potrzebujemy zainstalowanego nodeâ€™a (&gt;= 4.x.x) z npmâ€™em (&gt;= 3.x.x). Samo cli najÅ‚atwiej zainstalowaÄ‡ globalnie:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> angular-cli
</code></pre></div></div>
<p>Tworzymy nowy projekt, dodatkowo wskazujÄ…c preprocesor CSSÃ³w â€“ scss:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng new sample-cli <span class="nt">--style</span><span class="o">=</span>scss
</code></pre></div></div>

<p>Wszystkie kolejne operacje cli wykonujemy bÄ™dÄ…c w katalogu projektu.
Uruchamiamy projekt w trybie developerskim:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng serve
</code></pre></div></div>
<p>Aplikacja standardowo wystawia siÄ™ na localhost na porcie 4200:
<img style="max-height: 500px;" src="/assets/img/posts/2016-08-31-szybki-start-z-angular-cli/1.png" /></p>

<p>W kilku krokach dostajemy gotowy szkielet aplikacji, gotowy do rozwoju i dystrybucji.</p>

<p>DziÄ™ki Angular CLI dostajemy za darmo:</p>
<ul>
  <li>kompletny szkielet aplikacji</li>
  <li>dziaÅ‚ajÄ…cy projekt ze skonfigurowanÄ… najnowszÄ… wersjÄ… Angulara</li>
  <li>kompletne skrypty budujÄ…ce z moÅ¼liwoÅ›ciÄ…</li>
  <li>uruchomienia buildu produkcyjnego</li>
  <li>uruchomienia aplikacji w trybie developerskim</li>
  <li>uruchomienia testÃ³w jednostkowych i testÃ³w e2e</li>
  <li>wsparcie dla kompilowania budowania CSSâ€™Ã³w na bazie scss/sass/less/stylus</li>
</ul>

<p>W tym zaawansowane techniki budowania aplikacji:</p>
<ul>
  <li>bundlowanie kodu, w tym obsÅ‚uga podziaÅ‚u na czÄ™Å›ci wspÃ³lne i Å‚adowane asynchronicznie</li>
  <li>tree-shaking</li>
  <li>uglifying</li>
</ul>

<h2 id="struktura-projektu">Struktura projektu</h2>
<p>Wygenerowany szablon pozwala pracowaÄ‡ nad kompletnÄ… aplikacjÄ… webowÄ…. W poszczegÃ³lnych folderach znajdujÄ… siÄ™ ÅºrÃ³dÅ‚a aplikacji (kody TypeScript, htmlâ€™e i stylizacje), pliki testÃ³w (w tym e2e) oraz zasoby statyczne serwowane as-is w docelowej aplikacji.
<img height="500px" src="/assets/img/posts/2016-08-31-szybki-start-z-angular-cli/2.png" /></p>

<p>Punktem wejÅ›cia aplikacji sÄ… src/index.html oraz src/main.ts, ktÃ³rych celem jest zaÅ‚adowanie strony i osadzenie gÅ‚Ã³wnego komponentu naszej aplikacji zdefiniowanego w src/app/app.component.ts. Od tego ostatniego zaczynamy swojÄ… przygodÄ™ z frameworkiem.</p>

<h2 id="generowanie-kodu-i-praca-z-cli">Generowanie kodu i praca z CLI</h2>
<p>Angular CLI, poza wygenerowaniem i budowaniem projektu, pomaga teÅ¼ w codziennej pracy, zdejmujÄ…c z programisty typowe zadania zwiÄ…zane z boilerplate.</p>

<p>Automatycznie wygenerujemy szablony dla wszystkich skÅ‚adowych frameworka:</p>
<ul>
  <li>komponenty (component),</li>
  <li>dyrektywy (directive),</li>
  <li>pipeâ€™y (pipe),</li>
  <li>seriwisy (service),</li>
  <li>klasy i interfejsy (class, interface),</li>
  <li>enumy (enum),</li>
  <li>moduÅ‚y (module).</li>
</ul>

<p>UÅ¼ycie generatora pozwala szybko stworzyÄ‡ komplet zasobÃ³w.</p>

<p>PrzykÅ‚adowo stworzenie nowego komponentu wygeneruje dla nas:</p>
<ul>
  <li>klasÄ™ komponentu (*.ts)</li>
  <li>szablon html komponentu (*.html)</li>
  <li>plik stylizacji komponentu (*.html)</li>
  <li>plik z testami komponentu (*.spec.ts)</li>
  <li>podpiÄ™cie komponentu pod moduÅ‚ aplikacji</li>
</ul>

<p>Tak wygenerowany komponent jest gotowy do uÅ¼ycia bez dodatkowych modyfikacji:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng generate component TodoList
</code></pre></div></div>

<p>RÃ³wnie Å‚atwo moÅ¼emy stworzyÄ‡ serwis:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng generate service Todo
</code></pre></div></div>

<p>Nowo stworzone serwisy nie sÄ… standardowo podpinane pod Å¼aden moduÅ‚. MoÅ¼na to jednak Å‚atwo zrobiÄ‡, np. podpinajÄ…c w gÅ‚Ã³wnym module aplikacji, w pliku src/app/app.module.ts:</p>
<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">BrowserModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/platform-browser</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">NgModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/core</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">FormsModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/forms</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">HttpModule</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@angular/http</span><span class="dl">'</span><span class="p">;</span>

<span class="k">import</span> <span class="p">{</span> <span class="nx">AppComponent</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./app.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">TodoListComponent</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./todo-list/todo-list.component</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">TodoService</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./todo.service</span><span class="dl">'</span><span class="p">;</span>

<span class="p">@</span><span class="nd">NgModule</span><span class="p">({</span>
  <span class="na">declarations</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">AppComponent</span><span class="p">,</span>
    <span class="nx">TodoListComponent</span>
  <span class="p">],</span>
  <span class="na">imports</span><span class="p">:</span> <span class="p">[</span>
    <span class="nx">BrowserModule</span><span class="p">,</span>
    <span class="nx">FormsModule</span><span class="p">,</span>
    <span class="nx">HttpModule</span>
  <span class="p">],</span>
  <span class="na">providers</span><span class="p">:</span> <span class="p">[</span><span class="nx">TodoService</span><span class="p">],</span>
  <span class="na">bootstrap</span><span class="p">:</span> <span class="p">[</span><span class="nx">AppComponent</span><span class="p">]</span>
<span class="p">})</span>
<span class="k">export</span> <span class="kd">class</span> <span class="nx">AppModule</span> <span class="p">{</span> <span class="p">}</span>
</code></pre></div></div>
<p>W podobny sposÃ³b moÅ¼emy tworzyÄ‡ pozostaÅ‚e elementy aplikacji, zrzucajÄ…c na narzÄ™dzie tworzenie zasobÃ³w na podstawie szablonÃ³w.</p>

<h2 id="budowanie-projektu">Budowanie projektu</h2>
<p>Wygenerowany projekt moÅ¼na zbudowaÄ‡ w finalnÄ… aplikacjÄ™:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng build
</code></pre></div></div>
<p>Wygenerowane zasoby trafiajÄ… do folderu dist.</p>

<p>Budowanie moÅ¼na uruchomiÄ‡ podajÄ…c dodatkowo profil. Standardowo budowana jest developerska wersja aplikacji. JeÅ¼eli chcemy zbudowaÄ‡ produkcyjnÄ… aplikacjÄ™, wykorzystujÄ…cÄ… uglifying i tree-shaking, powinniÅ›my wskazaÄ‡ profil prod:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng build <span class="nt">--prod</span>
</code></pre></div></div>
<p>Dodatkowo moÅ¼liwe jest podanie wartoÅ›ci Å›rodowiskowych dla buildu i np. uruchamianie warunkowo szerszego logowania czy teÅ¼ punktÃ³w debugowania. W tym celu moÅ¼na uÅ¼yÄ‡ przeÅ‚Ä…cznika â€“env nazwa.</p>

<p>Tak ustawiony profil moÅ¼na wykorzystaÄ‡ na etapie budowania oraz w uruchomionej aplikacji, przykÅ‚adowo:</p>
<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="nx">environment</span><span class="p">.</span><span class="nx">production</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// ...</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="uruchomienie-testÃ³w">Uruchomienie testÃ³w</h2>
<p>ZarÃ³wno testy jednostkowe, jak i end-to-end moÅ¼emy spokojnie uruchamiaÄ‡ za pomocÄ… CLI, wszystkie potrzebne konfiguracje sÄ… juÅ¼ dostarczone w ramach wygenerowanego szkieletu aplikacji.</p>

<p>Standardowo testy sÄ… uruchamiane w trybie nasÅ‚uchiwania na zmiany, to znaczy Å¼e framework testowy pozostaje uruchomiony w tle i wykonuje zestaw testÃ³w za kaÅ¼dym razem gdy wprowadzimy zmianÄ™ w ÅºrÃ³dÅ‚ach.</p>

<p>Å»eby testy uruchomiÄ‡ jednokrotnie naleÅ¼y dodaÄ‡ flagÄ™ â€“watch false.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng <span class="nb">test</span> <span class="nt">--watch</span> <span class="nb">false</span>
</code></pre></div></div>

<p>Testy funkcjonalne uruchamiamy poleceniem:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng e2e
</code></pre></div></div>
<p>jednak przed ich uruchomieniem naleÅ¼y wczeÅ›niej uruchomiÄ‡ samÄ… aplikacjÄ™, np. przez pokazany juÅ¼ ng serve:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ng serve &amp; ng e2e
</code></pre></div></div>

<h2 id="podsumowanie">Podsumowanie</h2>
<p>Wykorzystanie narzÄ™dzia typu Angular CLI pozwala nam na:</p>
<ul>
  <li>korzystanie z najnowszych technologii,</li>
  <li>ustandaryzowanie struktury i konfiguracji projektu,</li>
  <li>zrzucenie utrzymania procesu budowania na community,</li>
  <li>szybkie wsparcie dla nowych wersji frameworka przy minimalnym koszcie,</li>
  <li>stosowanie wzorcowej/zalecanej konfiguracji,</li>
  <li>szybkie uruchamianie nowych projektÃ³w,</li>
  <li>stosowanie podejÅ›cia convention over configuration.</li>
</ul>
:ET